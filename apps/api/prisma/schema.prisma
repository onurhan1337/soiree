generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String          @id @default(cuid())
  email           String          @unique
  username        String?
  password        String
  organizedEvents Event[]         @relation("OrganizerEvents")
  attendedEvents  EventAttendee[] @relation("UserToAttendees")
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
}

model RevokedToken {
  id  String @id @default(uuid())
  jti String @unique
}

model Event {
  id          String          @id @default(cuid())
  name        String
  description String
  date        DateTime
  location    String
  imageUrl    String
  organizer   User            @relation("OrganizerEvents", fields: [organizerId], references: [id])
  organizerId String
  attendees   EventAttendee[] @relation("EventToAttendees")
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt

  @@unique([organizerId, date])
}

model EventAttendee {
  id        String   @id @default(cuid())
  role      ATTENDEE_ROLE @default(ATTENDEE)
  event     Event    @relation("EventToAttendees", fields: [eventId], references: [id])
  eventId   String
  user      User     @relation("UserToAttendees", fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([eventId, userId])
}

enum ATTENDEE_ROLE {
  ORGANIZER
  ATTENDEE
  SPEAKER
}